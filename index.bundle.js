"use strict";(self.webpackChunkbattleship=self.webpackChunkbattleship||[]).push([[826],{280:function(A,n,e){var t=this&&this.__importDefault||function(A){return A&&A.__esModule?A:{default:A}};Object.defineProperty(n,"__esModule",{value:!0});const r=e(652),o=e(743),i=t(e(815)),a=t(e(266));e(810);let s=(0,o.getPlayer)("You"),d=(0,o.getComputer)(),l="ver",c=0;function u(){c=0,s=(0,o.getPlayer)("You"),d=(0,o.getComputer)(),i.default.winner=null,a.default.showShipInput(),a.default.hidePlayground(),a.default.hideWinnerBanner(),a.default.resetShipInput(),a.default.resetPlayground(),a.default.showControls(),a.default.showInfo(`Tap spot to place ${r.shipKind[r.fleet[c]]}`)}const p=document.querySelector(".player1 .player-name"),h=document.querySelector(".player2 .player-name");null!==p&&null!==h&&(p.textContent=s.name,h.textContent=d.name),a.default.setBattlefield(),a.default.showInfo(`Tap spot to place ${r.shipKind[r.fleet[c]]}`);const f=document.querySelectorAll(".ship-input .spot");for(let A of f)A.addEventListener("click",(A=>{if(c<r.fleet.length){const n=A.target.getAttribute("data-coord");let e=0,t=0;null!==n&&([e,t]=n.split(",").map((A=>parseInt(A))));const o=(0,r.getShip)(r.fleet[c]);s.gameboard.placeShip(o,e,t,l)&&(c++,c<r.fleet.length?a.default.showInfo(`Tap spot to place ${r.shipKind[r.fleet[c]]}`):a.default.showInfo("All set!"),a.default.showShip(o.length-1,l,e,t))}}));const m=document.querySelector(".reset");null==m||m.addEventListener("click",u);const g=document.querySelector(".replay");null==g||g.addEventListener("click",u);const b=document.querySelector(".dir");null==b||b.addEventListener("click",(A=>{const n=A.target;"ver"===n.getAttribute("data-dir")?(n.setAttribute("data-dir","hor"),n.innerText="Horizontal",l="hor"):(n.setAttribute("data-dir","ver"),n.innerText="Vertical",l="ver")}));const w=document.querySelector(".done");null==w||w.addEventListener("click",(()=>{c===r.fleet.length&&(a.default.showPlayground(),a.default.hideShipInput(),a.default.hideControls(),a.default.showInfo("Tap spot on computer board to destroy ships"),d.placeShips(),i.default.play(s,d),i.default.winner=null)}))},23:(A,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.getGameboard=void 0,n.getGameboard=function(A=10){const n=[],e=[];for(let n=0;n<A;n++){e.push([]);for(let t=0;t<A;t++)e[n][t]=void 0}return{placeShip(t,r,o,i){let a=r,s=o;if("ver"===i?a+=t.length-1:"hor"===i&&(s+=t.length-1),!(a>=0&&a<A&&s>=0&&s<A))return!1;for(let A=r;A<=a;A++)for(let n=o;n<=s;n++)if(void 0!==e[A][n])return!1;for(let A=r;A<=a;A++)for(let n=o;n<=s;n++)e[A][n]=t;return n.push(t),!0},receiveAttack(A,n){const t=e[A][n];return void 0!==t&&(null==t||t.hit(),!0)},allShipsSunk(){for(let A of n)if(!A.hasSunk())return!1;return!0}}}},815:function(A,n,e){var t=this&&this.__importDefault||function(A){return A&&A.__esModule?A:{default:A}};Object.defineProperty(n,"__esModule",{value:!0});const r=t(e(266)),o=t(e(38)),i=t(e(377));let a,s={play:function(A,n){a=A;const e=document.querySelectorAll(".player2 .spot");for(let t of e)t.addEventListener("click",(e=>{var t;if(a===A&&null===s.winner){const o=e.target,i=null===(t=o.getAttribute("data-coord"))||void 0===t?void 0:t.split(",");let l=0,c=0;if(void 0!==i&&([l,c]=i.map((A=>parseInt(A)))),!A.wasAttacked(l,c)){a=n;const e=n.gameboard.receiveAttack(l,c);A.recordAttack(l,c),e?(o.classList.add("hit"),n.gameboard.allShipsSunk()&&(s.winner=A,a=A,r.default.showWinnerBanner(s.winner.name),r.default.showInfo(`${s.winner.name} won!`)),u()):(o.classList.add("missed"),p()),"Computer"===n.name&&d(n,A)}}}))},winner:null};function d(A,n){a===A&&null===s.winner&&setTimeout((function(){const e=A.launchAttack(),{row:t,col:o}=e,i=n.gameboard.receiveAttack(t,o),d=document.querySelector(`.player1 .spot[data-coord="${t},${o}"]`);i?(null==d||d.classList.add("hit"),n.gameboard.allShipsSunk()&&(s.winner=A,r.default.showWinnerBanner(s.winner.name),r.default.showInfo(`${s.winner.name} won!`)),u()):(null==d||d.classList.add("missed"),p()),a=n}),2e3)}const l=new Audio(o.default),c=new Audio(i.default);function u(){c.pause(),c.currentTime=0,l.currentTime=0,l.play()}function p(){l.pause(),l.currentTime=0,c.currentTime=0,c.play()}n.default=s},743:(A,n,e)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.getComputer=n.getPlayer=void 0;const t=e(23),r=e(652);let o=10;n.getPlayer=function(A){const n=[];for(let A=0;A<o;A++){n.push([]);for(let e=0;e<o;e++)n[A][e]=!1}return{name:A,gameboard:(0,t.getGameboard)(o),wasAttacked:(A,e)=>n[A][e],recordAttack(A,e){n[A][e]=!0}}},n.getComputer=function(){const A=[];for(let n=0;n<o;n++){A.push([]);for(let e=0;e<o;e++)A[n][e]=!1}return{name:"Computer",gameboard:(0,t.getGameboard)(o),wasAttacked:(n,e)=>A[n][e],recordAttack(n,e){A[n][e]=!0},launchAttack(){let A=Math.floor(Math.random()*o),n=Math.floor(Math.random()*o);for(;this.wasAttacked(A,n);)A=Math.floor(Math.random()*o),n=Math.floor(Math.random()*o);return this.recordAttack(A,n),{row:A,col:n}},placeShips(){for(let A of r.fleet){const n=(0,r.getShip)(A);let e=!1;for(;!e;){const A=Math.floor(Math.random()*o),t=Math.floor(Math.random()*o),r=["ver","hor"][Math.floor(2*Math.random())];e=this.gameboard.placeShip(n,A,t,r)}}}}}},652:(A,n)=>{var e;Object.defineProperty(n,"__esModule",{value:!0}),n.getShip=n.fleet=n.shipKind=void 0,function(A){A[A.submarine=1]="submarine",A[A.destroyer=2]="destroyer",A[A.cruiser=3]="cruiser",A[A.battleship=4]="battleship",A[A.carrier=5]="carrier"}(e||(n.shipKind=e={})),n.fleet=[e.submarine,e.submarine,e.destroyer,e.destroyer,e.cruiser,e.battleship,e.carrier],n.getShip=function(A){return{hits:0,length:A,hit(){this.hits<this.length&&this.hits++},hasSunk(){return this.hits===this.length}}}},266:(A,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.default={showShipInput(){const A=document.querySelector(".ship-input");null==A||A.classList.remove("hide")},hideShipInput(){const A=document.querySelector(".ship-input");null==A||A.classList.add("hide")},showShip(A,n,e,t){var r;let o=e,i=t;"ver"===n?o+=A:"hor"===n&&(i+=A);for(let A=e;A<=o;A++)for(let n=t;n<=i;n++)null===(r=document.querySelector(`.ship-input .spot[data-coord="${A},${n}"]`))||void 0===r||r.classList.add("ship")},resetShipInput(){const A=document.querySelectorAll(".ship");for(let n of A)n.classList.remove("ship")},setBattlefield(A=10){const n=document.querySelectorAll(".battlefield");for(let e of n){e.textContent="";for(let n=0;n<A;n++)for(let t=0;t<A;t++){const A=document.createElement("div");A.classList.toggle("spot"),A.setAttribute("data-coord",`${n},${t}`),e.appendChild(A)}}},showInfo(A){const n=document.querySelector(".info-display");null!==n&&(n.textContent=A)},hideControls(){var A,n;null===(A=document.querySelector(".dir"))||void 0===A||A.classList.add("hide"),null===(n=document.querySelector(".done"))||void 0===n||n.classList.add("hide")},showControls(){var A,n;null===(A=document.querySelector(".dir"))||void 0===A||A.classList.remove("hide"),null===(n=document.querySelector(".done"))||void 0===n||n.classList.remove("hide")},showPlayground(){const A=document.querySelector(".playground");null==A||A.classList.remove("hide")},resetPlayground(A=10){let n=document.querySelectorAll(".playground .battlefield");for(let e of n){e.textContent="";for(let n=0;n<A;n++)for(let t=0;t<A;t++){const A=document.createElement("div");A.classList.toggle("spot"),A.setAttribute("data-coord",`${n},${t}`),e.appendChild(A)}}},hidePlayground(){const A=document.querySelector(".playground");null==A||A.classList.add("hide")},showWinnerBanner(A){const n=document.querySelector(".winner-banner");if(null!==n){const e=n.querySelector(".message");null!==e&&(e.textContent=`${A}\nwon!`)}null==n||n.classList.remove("hide")},hideWinnerBanner(){const A=document.querySelector(".winner-banner");if(null!==A){const n=A.querySelector(".message");null!==n&&(n.textContent="")}null==A||A.classList.add("hide")}}},244:(A,n,e)=>{e.d(n,{Z:()=>a});var t=e(187),r=e.n(t),o=e(282),i=e.n(o)()(r());i.push([A.id,'/*\n! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com\n*//*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #e5e7eb; /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: \'\';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user\'s configured `sans` font-family by default.\n5. Use the user\'s configured `sans` font-feature-settings by default.\n6. Use the user\'s configured `sans` font-variation-settings by default.\n*/\n\nhtml {\n  line-height: 1.5; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  -moz-tab-size: 4; /* 3 */\n  -o-tab-size: 4;\n     tab-size: 4; /* 3 */\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */\n  font-feature-settings: normal; /* 5 */\n  font-variation-settings: normal; /* 6 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0; /* 1 */\n  line-height: inherit; /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n  border-top-width: 1px; /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user\'s configured `mono` font family by default.\n2. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n  border-collapse: collapse; /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-feature-settings: inherit; /* 1 */\n  font-variation-settings: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  font-weight: inherit; /* 1 */\n  line-height: inherit; /* 1 */\n  color: inherit; /* 1 */\n  margin: 0; /* 2 */\n  padding: 0; /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\n[type=\'button\'],\n[type=\'reset\'],\n[type=\'submit\'] {\n  -webkit-appearance: button; /* 1 */\n  background-color: transparent; /* 2 */\n  background-image: none; /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type=\'search\'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nReset default styling for dialogs.\n*/\ndialog {\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user\'s configured gray 400 color.\n*/\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role="button"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don\'t get the pointer cursor.\n*/\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Make elements with the HTML hidden attribute stay hidden by default */\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}\n\n::backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}.flex {\n  display: flex;\n}.grid {\n  display: grid;\n}.border {\n  border-width: 1px;\n}.border-2 {\n  border-width: 2px;\n}.capitalize {\n  text-transform: capitalize;\n}.italic {\n  font-style: italic;\n}.shadow-sm {\n  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}.transition {\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}.ease-in-out {\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n}.player1,.player2,.playground,body{display:flex;justify-items:center;align-items:center}body{flex-direction:column;gap:10px;--tw-bg-opacity: 1;background-color: rgb(31 41 55 / var(--tw-bg-opacity));--tw-text-opacity: 1;color: rgb(248 250 252 / var(--tw-text-opacity))}h1{font-weight:600;font-size:2em;font-style:italic;padding:9px 9px 6px;color:#89c;text-shadow:3px 3px 3px #222}.info-display{border-radius:6px;padding:.5em 1em;margin:.5em;min-width:20em;text-align:center;border-width: 2px;--tw-border-opacity: 1;border-color: rgb(255 255 255 / var(--tw-border-opacity))}button{color:#fff;background:#89c;padding:9px 18px;border-radius:6px;margin:6px;width:6em;text-transform:capitalize;font-weight:600}button.dir{width:5.5em;height:5.5em;border:2px solid #89c;background:rgba(0,0,0,0);border-radius:3em;text-align:center;padding:0;color:#89c}.battlefield{width:340px;height:340px;padding:10px;margin:2px;display:grid;grid-template-columns:repeat(10, 32px);grid-template-rows:repeat(10, 32px);text-align:center}.playground{justify-content:space-evenly;flex-flow:row wrap;margin:0}.player1,.player2{flex-direction:column;justify-items:center;margin:10px;border-radius:6px}.player-name{min-width:11em;border:2px solid #000;text-align:center;padding:.5em;border-radius:6px;font-weight:600;--tw-border-opacity: 1;border-color: rgb(243 244 246 / var(--tw-border-opacity))}.hide{display:none}.battlefield .spot {\n  --tw-bg-opacity: 1;\n  background-color: rgb(31 41 55 / var(--tw-bg-opacity));\n  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n  --tw-shadow-color: #4b5563;\n  --tw-shadow: var(--tw-shadow-colored);\n  border-width: 2px;\n  --tw-border-opacity: 1;\n  border-color: rgb(243 244 246 / var(--tw-border-opacity));margin:1px;border-radius:6px;transition:border-radius .4s ease-in-out .1s,background .4s ease-in-out .3s;\n}div.spot.ship {\n  --tw-bg-opacity: 1;\n  background-color: rgb(209 213 219 / var(--tw-bg-opacity));border:none;border-radius:16px;\n}div.spot.hit{background:tomato;border:none}div.spot.missed{background:#89c;border:none}.winner-banner{text-align:center;margin:2em}.winner-banner .message{font-size:3em;font-weight:600}',"",{version:3,sources:["webpack://./node_modules/.pnpm/tailwindcss@3.3.3_ts-node@10.9.1/node_modules/tailwindcss/base.css","webpack://./src/scss/main.scss"],names:[],mappings:"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",sourcesContent:["@tailwind base;\n",'@import "tailwindcss/base";\n@import "tailwindcss/components";\n@import "tailwindcss/utilities";\n\n$radius: 6px;\n\n%flex-display {\n  display: flex;\n  justify-items: center;\n  align-items: center;\n}\n\nbody {\n  @extend %flex-display;\n  flex-direction: column;\n  gap: 10px;\n\t@apply bg-gray-800;\n\t@apply text-slate-50;\n}\n\nh1 {\n  font-weight: 600;\n  font-size: 2em;\n  font-style: italic;\n  padding: 9px 9px 6px;\n  color: #89c;\n  text-shadow: 3px 3px 3px #222;\n}\n\n.info-display {\n  border-radius: $radius;\n  padding: 0.5em 1em;\n  margin: 0.5em;\n  min-width: 20em;\n  text-align: center;\n\t@apply border-2 border-white;\n}\n\nbutton {\n  color: white;\n  background: #89c;\n  padding: 9px 18px;\n  border-radius: $radius;\n  margin: 6px;\n  width: 6em;\n  text-transform: capitalize;\n  font-weight: 600;\n}\n\nbutton.dir {\n  width: 5.5em;\n  height: 5.5em;\n  border: 2px solid #89c;\n  background: transparent;\n  border-radius: 3em;\n  text-align: center;\n  padding: 0;\n  color: #89c;\n}\n\n.battlefield {\n  width: 340px;\n  height: 340px;\n  padding: 10px;\n  margin: 2px;\n  display: grid;\n  grid-template-columns: repeat(10, 32px);\n  grid-template-rows: repeat(10, 32px);\n  text-align: center;\n}\n\n.playground {\n  @extend %flex-display;\n  justify-content: space-evenly;\n  flex-flow: row wrap;\n  margin: 0;\n}\n\n.player1,\n.player2 {\n  @extend %flex-display;\n  flex-direction: column;\n  justify-items: center;\n  margin: 10px;\n  border-radius: $radius;\n}\n\n.player-name {\n  min-width: 11em;\n  border: 2px solid #000;\n  text-align: center;\n  padding: 0.5em;\n  border-radius: $radius;\n  font-weight: 600;\n\t@apply border-gray-100;\n}\n\n.hide {\n  display: none;\n}\n\n.battlefield .spot {\n\t@apply bg-gray-800;\n\t@apply shadow-sm shadow-gray-600;\n  @apply border-2 border-gray-100;\n  margin: 1px;\n  border-radius: 6px;\n  transition:\n    border-radius 0.4s ease-in-out 0.1s,\n    background 0.4s ease-in-out 0.3s;\n}\n\ndiv.spot.ship {\n\t@apply bg-gray-300;\n  border: none;\n  border-radius: 16px;\n}\n\ndiv.spot.hit {\n  background: tomato;\n  border: none;\n}\n\ndiv.spot.missed {\n  background: #89c;\n  border: none;\n}\n\n.winner-banner {\n  text-align: center;\n  margin: 2em;\n}\n\n.winner-banner .message {\n  font-size: 3em;\n  font-weight: 600;\n}\n'],sourceRoot:""}]);const a=i},282:A=>{A.exports=function(A){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=A(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(A,e,t,r,o){"string"==typeof A&&(A=[[null,A,void 0]]);var i={};if(t)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var d=0;d<A.length;d++){var l=[].concat(A[d]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},187:A=>{A.exports=function(A){var n=A[1],e=A[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(r," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},810:(A,n,e)=>{e.r(n),e.d(n,{default:()=>g});var t=e(72),r=e.n(t),o=e(298),i=e.n(o),a=e(976),s=e.n(a),d=e(147),l=e.n(d),c=e(566),u=e.n(c),p=e(396),h=e.n(p),f=e(244),m={};m.styleTagTransform=h(),m.setAttributes=l(),m.insert=s().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=u(),r()(f.Z,m);const g=f.Z&&f.Z.locals?f.Z.locals:void 0},72:A=>{var n=[];function e(A){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===A){e=t;break}return e}function t(A,t){for(var o={},i=[],a=0;a<A.length;a++){var s=A[a],d=t.base?s[0]+t.base:s[0],l=o[d]||0,c="".concat(d," ").concat(l);o[d]=l+1;var u=e(c),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var h=r(p,t);t.byIndex=a,n.splice(a,0,{identifier:c,updater:h,references:1})}i.push(c)}return i}function r(A,n){var e=n.domAPI(n);return e.update(A),function(n){if(n){if(n.css===A.css&&n.media===A.media&&n.sourceMap===A.sourceMap&&n.supports===A.supports&&n.layer===A.layer)return;e.update(A=n)}else e.remove()}}A.exports=function(A,r){var o=t(A=A||[],r=r||{});return function(A){A=A||[];for(var i=0;i<o.length;i++){var a=e(o[i]);n[a].references--}for(var s=t(A,r),d=0;d<o.length;d++){var l=e(o[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=s}}},976:A=>{var n={};A.exports=function(A,e){var t=function(A){if(void 0===n[A]){var e=document.querySelector(A);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(A){e=null}n[A]=e}return n[A]}(A);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},566:A=>{A.exports=function(A){var n=document.createElement("style");return A.setAttributes(n,A.attributes),A.insert(n,A.options),n}},147:(A,n,e)=>{A.exports=function(A){var n=e.nc;n&&A.setAttribute("nonce",n)}},298:A=>{A.exports=function(A){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=A.insertStyleElement(A);return{update:function(e){!function(A,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,r&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(t,A,n.options)}(n,A,e)},remove:function(){!function(A){if(null===A.parentNode)return!1;A.parentNode.removeChild(A)}(n)}}}},396:A=>{A.exports=function(A,n){if(n.styleSheet)n.styleSheet.cssText=A;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(A))}}},38:(A,n,e)=>{A.exports=e.p+"assets7f5c534768fa29d8174c.mp3"},377:(A,n,e)=>{A.exports=e.p+"assets27124c7ff9d07db45a31.mp3"}},A=>{A(A.s=280)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,